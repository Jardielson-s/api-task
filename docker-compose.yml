services:
  localstack:
    image: localstack/localstack
    container_name: localstack_main
    ports:
      - '4566:4566'
    environment:
      - SERVICES=sqs,ses
      - DEFAULT_REGION=us-east-1
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - 'localstack_data:/var/lib/localstack'
    networks:
      - go-network

  aws-cli:
    image: amazon/aws-cli:latest
    volumes:
      - ./aws-credentials:/root/.aws
      - .:/aws
    environment:
      - AWS_ACCESS_KEY_ID="test"
      - AWS_SECRET_ACCESS_KEY="test"
      - AWS_DEFAULT_REGION="us-east-1"
    networks:
      - go-network

  mysql:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - '3306:3306'
    networks:
      - go-network
    volumes:
      - mysql-data:/var/lib/mysql

  go-app:
    build: .
    container_name: tasks-api
    ports:
      - '8080:8080'
    environment:
      DB_HOST: ${DB_HOST_DOCKER}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      ACTIVE_NOTIFICATION: ${ACTIVE_NOTIFICATION}
      AWS_SQS_ENDPOINT: ${AWS_SQS_ENDPOINT_DOCKER}
      AWS_ENDPOINT: ${AWS_ENDPOINT_DOCKER}
      EMAIL_APPLICATION: ${EMAIL_APPLICATION}
      SECRET_KEY: ${SECRET_KEY}
      AWS_REGION: ${AWS_REGION}
      AWS_SECRET: ${AWS_SECRET}
      AWS_KEY: ${AWS_KEY}
    depends_on:
      - mysql
      - localstack
    networks:
      - go-network

volumes:
  mysql-data:
  localstack_data:
    driver: local

networks:
  go-network:
    driver: bridge
