definitions:
  entity.Login:
    properties:
      email:
        example: manager@company.com
        type: string
      password:
        example: password123
        type: string
    type: object
  handlers.CreateTaskBody:
    properties:
      name:
        example: Test 1
        maxLength: 100
        minLength: 5
        type: string
      status:
        enum:
        - active
        - inactive
        - pending
        - complete
        example: pending
        type: string
      summary:
        example: Summary Test 1
        maxLength: 200
        minLength: 10
        type: string
    required:
    - name
    - status
    - summary
    type: object
  handlers.CreateUserBody:
    properties:
      email:
        example: test@gmail.com
        maxLength: 100
        minLength: 10
        type: string
      password:
        example: test1234
        maxLength: 8
        minLength: 6
        type: string
      username:
        example: Test User
        maxLength: 100
        minLength: 5
        type: string
    required:
    - email
    - password
    - username
    type: object
  handlers.LinkUserWithRoleBody:
    properties:
      role_id:
        example: 1
        type: integer
      user_id:
        example: 1
        type: integer
    required:
    - role_id
    - user_id
    type: object
  handlers.UpdateTaskBody:
    properties:
      name:
        example: New Name
        type: string
      status:
        enum:
        - active
        - inactive
        - pending
        - complete
        example: pending
        type: string
      summary:
        example: New summary
        type: string
    type: object
  handlers.UpdateUserBody:
    properties:
      email:
        example: New Name
        maxLength: 100
        minLength: 10
        type: string
      password:
        example: NewPassword123
        type: string
    required:
    - email
    type: object
  shared.CreateResponse:
    properties:
      code:
        type: integer
      details:
        description: Optional field for more specifics
        type: string
      message:
        type: string
    type: object
  shared.CreateTaskResponse:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      name:
        type: string
      summary:
        type: string
      updatedAt:
        type: string
    type: object
  shared.CreateUserResponse:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a simple Go REST API using MySQL and Swagger for documentation.
  title: TASKS-API REST API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: route to login
      parameters:
      - description: Login data
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/entity.Login'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.Login'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Login
      tags:
      - login
  /tasks:
    post:
      consumes:
      - application/json
      description: Create a new task in the database
      parameters:
      - description: Descrição do parâmetro
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateTaskBody'
      produces:
      - application/json
      responses:
        "201":
          description: Task created
          schema:
            $ref: '#/definitions/shared.CreateTaskResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.CreateResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Create a new task
      tags:
      - tasks
  /tasks/{id}:
    get:
      consumes:
      - application/json
      description: Find task by id in the database
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Task data
          schema:
            $ref: '#/definitions/shared.CreateTaskResponse'
        "400":
          description: Invalid ID supplied
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Task not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Find task by id
      tags:
      - tasks
  /tasks/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete  task in the database
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Task not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Delete task
      tags:
      - tasks
  /tasks/list:
    get:
      consumes:
      - application/json
      description: List tasks in the database
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: pageSize
        type: integer
      - description: Search query for task name
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Paginated list of tasks
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: List tasks
      tags:
      - tasks
  /tasks/update/{id}:
    patch:
      consumes:
      - application/json
      description: Update task in the database
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: Description
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateTaskBody'
      produces:
      - application/json
      responses:
        "201":
          description: Task updated
          schema:
            $ref: '#/definitions/shared.CreateTaskResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.CreateResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Update task
      tags:
      - tasks
  /users:
    post:
      consumes:
      - application/json
      description: Create a new user in the database
      parameters:
      - description: Descrição do parâmetro
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateUserBody'
      produces:
      - application/json
      responses:
        "201":
          description: Usuário criado com sucesso
          schema:
            $ref: '#/definitions/shared.CreateUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.CreateResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Find user by id in the database
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User data
          schema:
            $ref: '#/definitions/shared.CreateUserResponse'
        "400":
          description: Invalid ID supplied
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Find user by id
      tags:
      - users
  /users/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete  user in the database
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Delete user
      tags:
      - users
  /users/link:
    patch:
      consumes:
      - application/json
      description: link user  with role in the database
      parameters:
      - description: Descrição do parâmetro
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.LinkUserWithRoleBody'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.CreateResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Link user with role
      tags:
      - users
  /users/list:
    get:
      consumes:
      - application/json
      description: List users in the database
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: pageSize
        type: integer
      - description: Search query for username or email
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Paginated list of users
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: List users
      tags:
      - users
  /users/update/{id}:
    patch:
      consumes:
      - application/json
      description: Update user in the database
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Descrição do parâmetro
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateUserBody'
      produces:
      - application/json
      responses:
        "201":
          description: Usuário atualizado com sucesso
          schema:
            $ref: '#/definitions/shared.CreateUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.CreateResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Update user
      tags:
      - users
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
